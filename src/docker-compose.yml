networks:
  transcendence :
    name : transcendence

services :
  nginx :
    container_name : nginx
    build : ./nginx/
    ports :
      - 8000:443
    networks :
       - transcendence
    volumes:
      - ../frontend:/var/www/frontend
    depends_on :
      - django
    restart: always

  django :
    container_name : django
    build : ./django
    networks :
       - transcendence
    volumes:
      - ../frontend:/var/www/frontend
      - ../backend:/var/www/backend
    depends_on :
      - postgres_db
    env_file :
      - .env
    environment:
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
    restart: always

  pong_server :
    container_name : pong_server
    build : ./django
    networks :
       - transcendence
    volumes:
      - ../frontend:/var/www/frontend
      - ../backend:/var/www/backend
    depends_on :
      - postgres_db
    env_file :
      - .env
    environment:
      - IS_WS=1
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
    restart: always


  postgres_db :
    container_name : postgres_db
    image : postgres:15
    env_file :
      - .env
    environment :
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks :
      - transcendence
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  redis_channel :
    container_name : redis_channel
    image : redis:7
    networks :
      - transcendence
    restart: always


volumes:
  postgres_data: